#!/bin/sh

# Small weather function
# Got the idea from http://osxdaily.com/2016/02/18/get-weather-command-line-finger-graph/ and a comment there
usage() {
    echo "Usage: weather [-option] city"
    echo
    echo "Options (no option defaults to -c):"
    echo "	-c, --current		Output only current weather for the given city."
    echo "	-t, --today		Output only today's weather for the given city."
    echo "      -1, --one-day           Output only today's weather for the given city."
    echo "      -2, --two-days          Output weather forecast two days (incl. today) for the given city."
    echo "	-3, --three-days	Output weather forecast three days (incl. today) for the given city."
}
	
if [ $# == 0 ]; then
    usage
elif [ $# == 1 ]; then
    CITY=$(echo "$1" | sed 's/ /%20/g')
    curl -s https://wttr.in/$CITY | head -7
    echo
elif [ $# > 1 ] && ( [[ "$1" == "-c" ]] || [[ "$1" == "--current" ]] ); then
    CITY=$(echo "${@:2}" | sed 's/ /%20/g')
    curl -s https://wttr.in/$CITY | head -7
    echo
elif [ $# > 1 ] && ( [[ "$1" == "-t" ]] || [[ "$1" == "--today" ]] || [[ "$1" == "-1" ]] || [[ "$1" == "--one-day" ]] ); then
    CITY=$(echo "${@:2}" | sed 's/ /%20/g')
    curl -s https://wttr.in/$CITY | head -17
    echo
elif [ $# > 1 ] && ( [[ "$1" == "-2" ]] || [[ "$1" == "--two-days" ]] ); then
    CITY=$(echo "${@:2}" | sed 's/ /%20/g')
    curl -s https://wttr.in/$CITY | head -27
    echo
elif [ $# > 1 ] && ( [[ "$1" == "-3" ]] || [[ "$1" == "--three-days" ]] ); then
    CITY=$(echo "${@:2}" | sed 's/ /%20/g')
    curl -s https://wttr.in/$CITY | head -37
    echo
elif [ $# > 1 ];then
    CITY=$(echo "$@" | sed 's/ /%20/g')
    curl -s https://wttr.in/$CITY | head -7
    echo
else
    usage
fi
